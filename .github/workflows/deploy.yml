name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

    - name: Create target directory on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} "mkdir -p /home/ec2-user/MapDa_Server"

    - name: Stop and remove old Docker containers
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} "
          docker-compose -f /home/ec2-user/MapDa_Server/docker-compose.yml down || true
        "

    - name: Copy files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./* ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:/home/ec2-user/MapDa_Server

    - name: Deploy with Docker Compose
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} "
          cd /home/ec2-user/MapDa_Server &&
          docker-compose down &&
          docker-compose up --build -d
        "

  verification:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Verify deployment
      run: |
        STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}" https://api.mapda.site/docs#/)
        if [ "$STATUS_CODE" -ne 200 ]; then
          echo "Verification failed. Received status code: $STATUS_CODE"
          exit 1
        else
          echo "Verification succeeded. Received status code: $STATUS_CODE"
        fi
